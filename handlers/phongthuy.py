import sys
import os

# T·ª± ƒë·ªông th√™m root v√†o sys.path ƒë·ªÉ import file ngo√†i root (n·∫øu ch·∫°y t·ª´ handlers/)
ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if ROOT not in sys.path:
    sys.path.append(ROOT)

from thien_can import CAN_INFO
from can_chi_dict import data as CAN_CHI_DATA

def phongthuy_ngay(can:str, chi:str):
    """
    Tr·∫£ v·ªÅ th√¥ng tin phong th·ªßy cho ng√†y d·ª±a tr√™n thi√™n can, ƒë·ªãa chi.
    """
    info = CAN_INFO.get(can, None)
    if not info:
        return f"Kh√¥ng t√¨m th·∫•y th√¥ng tin thi√™n can {can}."
    key = f"{can} {chi}"
    so_goi_y = CAN_CHI_DATA.get(key, "Kh√¥ng r√µ")
    return (
        f"üåü Ng√†y {can} {chi}\n"
        f"- √Çm/D∆∞∆°ng: {info['am_duong']}\n"
        f"- Ng≈© h√†nh: {info['ngu_hanh']}\n"
        f"- Ph∆∞∆°ng: {info['phuong']}\n"
        f"- S·ªë g·ª£i √Ω: {so_goi_y}"
    )

def phongthuy_can_chi(can_chi:str):
    """
    Tra c·ª©u s·ªë h·ª£p t·ª´ dict can_chi_dict.py cho can chi b·∫•t k·ª≥.
    """
    so_goi_y = CAN_CHI_DATA.get(can_chi, None)
    if so_goi_y:
        return f"Can chi {can_chi} - S·ªë h·ª£p: {so_goi_y}"
    else:
        return f"Kh√¥ng t√¨m th·∫•y s·ªë h·ª£p cho can chi {can_chi}."
