from datetime import datetime
from thien_can import CAN_INFO
from can_chi_dict import data as CAN_CHI_SO_HAP

def chuan_hoa_can_chi(s):
    """Chuy·ªÉn can chi v·ªÅ d·∫°ng chu·∫©n, hoa ch·ªØ c√°i ƒë·∫ßu: Gi√°p T√Ω, ·∫§t M√£o,..."""
    return ' '.join([w.capitalize() for w in s.strip().split()])

def get_can_chi_ngay(year, month, day):
    """T√≠nh can chi ng√†y d∆∞∆°ng (l·ªãch Gregory, ƒë·∫ßu v√†o: nƒÉm-th√°ng-ng√†y)"""
    if month < 3:
        month += 12
        year -= 1
    a = year // 100
    b = 2 - a + a // 4
    jd = int(365.25 * (year + 4716)) + int(30.6001 * (month + 1)) + day + b - 1524
    can_list = ['Gi√°p', '·∫§t', 'B√≠nh', 'ƒêinh', 'M·∫≠u', 'K·ª∑', 'Canh', 'T√¢n', 'Nh√¢m', 'Qu√Ω']
    chi_list = ['T√Ω', 'S·ª≠u', 'D·∫ßn', 'M√£o', 'Th√¨n', 'T·ªµ', 'Ng·ªç', 'M√πi', 'Th√¢n', 'D·∫≠u', 'Tu·∫•t', 'H·ª£i']
    can = can_list[(jd + 9) % 10]
    chi = chi_list[(jd + 1) % 12]
    return f"{can} {chi}"

def sinh_so_hap_cho_ngay(can_chi_str):
    """
    Sinh s·ªë h·∫°p, s·ªë m·ªánh, c√°c b·ªô s·ªë t·ª´ can chi truy·ªÅn v√†o.
    Tr·∫£ v·ªÅ dict: can, √¢m d∆∞∆°ng, ng≈© h√†nh, s·ªë h·∫°p can, danh s√°ch s·ªë m·ªánh, c√°c b·ªô s·ªë gh√©p
    """
    code = CAN_CHI_SO_HAP.get(can_chi_str)
    if not code:
        return None
    so_hap_can, rest = code.split('-')
    so_hap_list = rest.split(',') if rest else []
    can = can_chi_str.split()[0]
    info = CAN_INFO.get(can, {})
    # T·∫°o c√°c b·ªô s·ªë gh√©p t·ª´ c√°c s·ªë m·ªánh v√† s·ªë h·∫°p
    so_list = [so_hap_can] + so_hap_list
    ket_qua = set()
    for i in range(len(so_list)):
        for j in range(len(so_list)):
            if i != j:
                ket_qua.add(so_list[i] + so_list[j])
    return {
        "can": can,
        "am_duong": info.get("am_duong", "?"),
        "ngu_hanh": info.get("ngu_hanh", "?"),
        "so_hap_can": so_hap_can,
        "so_hap_list": so_hap_list,
        "so_gh√©p": sorted(list(ket_qua))
    }

def phong_thuy_format(can_chi, sohap_info, is_today=False, today_str=None):
    """
    Tr·∫£ v·ªÅ text phong th·ªßy s·ªë d·∫°ng ƒë·∫πp, ƒë·ªìng nh·∫•t cho c·∫£ ng√†y/can chi.
    """
    can = can_chi.split()[0]
    can_info = CAN_INFO.get(can, {})
    am_duong = can_info.get("am_duong", "?")
    ngu_hanh = can_info.get("ngu_hanh", "?")
    so_hap_can = sohap_info['so_hap_can'] if sohap_info else "?"
    so_menh = ','.join(sohap_info['so_hap_list']) if sohap_info and sohap_info.get('so_hap_list') else "?"
    so_hap_ngay = ','.join(sohap_info['so_gh√©p']) if sohap_info and sohap_info.get('so_gh√©p') else "?"
    if is_today and today_str:
        main_line = f"üîÆ Phong th·ªßy NG√ÄY HI·ªÜN T·∫†I: {can_chi} ({today_str})"
    else:
        main_line = f"üîÆ Phong th·ªßy s·ªë ng≈© h√†nh cho ng√†y {can_chi}:"
    text = (
        f"{main_line}\n"
        f"- Can: {can}, {am_duong} {ngu_hanh}, s·ªë h·∫°p {so_hap_can}\n"
        f"- S·ªë m·ªánh: {so_menh}\n"
        f"- S·ªë h·∫°p ng√†y: {so_hap_ngay}"
    )
    return text

def chot_so_format(can_chi, sohap_info, today_str):
    """
    Tr·∫£ v·ªÅ text ch·ªët s·ªë mi·ªÅn B·∫Øc (phong th·ªßy) cho ng√†y hi·ªán t·∫°i
    """
    if not sohap_info or not sohap_info.get("so_hap_list"):
        return "Kh√¥ng ƒë·ªß d·ªØ li·ªáu phong th·ªßy ƒë·ªÉ ch·ªët s·ªë h√¥m nay!"
    d = [sohap_info['so_hap_can']] + sohap_info['so_hap_list']
    chams = ','.join(d)
    dan_de = []
    for x in d:
        for y in d:
            dan_de.append(x + y)
    dan_de = sorted(set(dan_de))
    lo = []
    for x in d:
        for y in d:
            if x != y:
                lo.append(x + y)
    lo = sorted(set(lo))
    icons = "üéâüçÄü•á"
    text = (
        f"{icons}\n"
        f"*Ch·ªët s·ªë 3 mi·ªÅn ng√†y {today_str} ({can_chi})*\n"
        f"ƒê·∫ßu - ƒëu√¥i (ƒê·∫∑c bi·ªát) - Gi·∫£i 1: ch·∫°m {chams}\n"
        f"D√†n ƒë·ªÅ: {', '.join(dan_de)}\n"
        f"L√¥: {', '.join(lo)}"
    )
    return text
