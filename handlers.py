from telegram.ext import (
    CommandHandler, CallbackQueryHandler, MessageHandler, filters
)
from menu_handlers import (
    menu, menu_callback_handler, all_text_handler
)
from admin_handlers import (
    admin_menu, backup_restore_menu
)
from user_manage import (
    listusers, deluser, block_unapproved
)
from logic_xsmb import (
    thong_ke_xsmb, thong_ke_dau_duoi_db, predict_xsmb_rf
)
from phongthuy import (
    # c√°c h√†m phong th·ªßy n·∫øu c·∫ßn
)
from config import logger

async def start_handler(update, context):
    await menu(update, context)

async def menu_handler(update, context):
    await menu(update, context)

async def help_handler(update, context):
    text = (
        "ü§ñ *Bot XSMB Phong th·ªßy AI*\n\n"
        "C√°c l·ªánh h·ªó tr·ª£:\n"
        "/start ho·∫∑c /menu - M·ªü menu ch√≠nh\n"
        "/help - Xem h∆∞·ªõng d·∫´n\n"
        "/listusers - Danh s√°ch user ƒë√£ duy·ªát (superadmin)\n"
        "/deluser <user_id> - X√≥a quy·ªÅn user\n"
        "\n"
        "T√≠nh nƒÉng n·ªïi b·∫≠t:\n"
        "‚Ä¢ D·ª± ƒëo√°n AI XSMB\n"
        "‚Ä¢ Gh√©p xi√™n, c√†ng, ƒë·∫£o s·ªë\n"
        "‚Ä¢ Tra c·ª©u phong th·ªßy ng√†y\n"
        "‚Ä¢ Ch·ªët s·ªë, nhi·ªÅu ch·∫ø ƒë·ªô\n"
        "‚Ä¢ Th·ªëng k√™, backup, qu·∫£n tr·ªã, ·ªßng h·ªô bot"
    )
    await update.message.reply_text(text, parse_mode="Markdown")

async def error_handler(update, context):
    logger.error("Exception while handling an update:", exc_info=context.error)
    # C√≥ th·ªÉ g·ª≠i l·ªói v·ªÅ cho admin n·∫øu c·∫ßn

def register_handlers(app):
    # Command
    app.add_handler(CommandHandler("start", start_handler))
    app.add_handler(CommandHandler("menu", menu_handler))
    app.add_handler(CommandHandler("help", help_handler))
    app.add_handler(CommandHandler("listusers", listusers))
    app.add_handler(CommandHandler("deluser", deluser))
    # Callback/menu
    app.add_handler(CallbackQueryHandler(menu_callback_handler))
    # Text (x·ª≠ l√Ω nh·∫≠p text cho c√°c menu c·∫ßn nh·∫≠p)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, all_text_handler))
    # Block user ch∆∞a duy·ªát
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, block_unapproved))
    # Error handler
    app.add_error_handler(error_handler)
